
// SlkExecute.txt - generated by the SLK parser generator 

// This file can be edited into the SlkAction class. 

public void execute ( int  number )
{
  switch ( number ) {
    case 1:  unidadDeCompilacion1();  break;
    case 2:  unidadDeCompilacion2();  break;
    case 3:  unidadDeCompilacion3();  break;
    case 4:  moduloPrograma();  break;
    case 5:  activarDeclarativa();  break;
    case 6:  cabeceraModulo();  break;
    case 7:  CierraAmbito();  break;
    case 8:  Declaracion();  break;
    case 9:  tipoSimple();  break;
    case 10:  tipoSimple2();  break;
    case 11:  subrango();  break;
    case 12:  listaIdentificadores();  break;
    case 13:  vacio();  break;
    case 14:  variable();  break;
    case 15:  cierravariable();  break;
    case 16:  Marca();  break;
    case 17:  listaVariables();  break;
    case 18:  Begin();  break;
    case 19:  SentenciaAsignacion();  break;
    case 20:  Identificador();  break;
    case 21:  RestoSentenciaAsignacion();  break;
    case 22:  RestoSentenciaRestoAsignacion();  break;
    case 23:  Expresion();  break;
    case 24:  expresionIf();  break;
    case 25:  expresionElsIf();  break;
    case 26:  SentenciaWHILE();  break;
    case 27:  SentenciaREPEAT();  break;
    case 28:  SentenciaLOOP();  break;
    case 29:  exprFor();  break;
    case 30:  exprTo();  break;
    case 31:  SentenciaFOR();  break;
    case 32:  SentenciaWITH();  break;
    case 33:  SentenciaRETURN();  break;
    case 34:  ListaDeValores();  break;
    case 35:  RestoValores();  break;
    case 36:  RestoExpresion();  break;
    case 37:  ExpresionSimple();  break;
    case 38:  RestoExpresionSimple();  break;
    case 39:  termino();  break;
    case 40:  unitSuma();  break;
    case 41:  unitResta();  break;
    case 42:  factor();  break;
    case 43:  numero();  break;
    case 44:  igual();  break;
    case 45:  distinto();  break;
    case 46:  distinto2();  break;
    case 47:  menor();  break;
    case 48:  menorIgual();  break;
    case 49:  mayor();  break;
    case 50:  mayorIgual();  break;
    case 51:  operadorIn();  break;
    case 52:  suma();  break;
    case 53:  resta();  break;
    case 54:  operadorOr();  break;
    case 55:  mult();  break;
    case 56:  division();  break;
    case 57:  divisionEntera();  break;
    case 58:  operadorModulo();  break;
    case 59:  ampersand();  break;
    case 60:  operadorAnd();  break;
    case 61:  operadorNot();  break;
    case 62:  operadorComplemento();  break;
    case 63:  numEntero();  break;
    case 64:  numReal();  break;
    case 65:  tipoPredefinido();  break;
    case 66:  bitset();  break;
    case 67:  booleano();  break;
    case 68:  cardinal();  break;
    case 69:  caracter();  break;
    case 70:  entero();  break;
    case 71:  longint();  break;
    case 72:  longreal();  break;
    case 73:  proc();  break;
    case 74:  real();  break;
    case 75:  verdadero();  break;
    case 76:  falso();  break;
    case 77:  nil();  break;
    case 78:  identificador();  break;
  }
}
