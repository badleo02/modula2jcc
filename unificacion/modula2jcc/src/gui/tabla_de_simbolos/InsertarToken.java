package gui.tabla_de_simbolos;

import tabla_de_simbolos.TablaSimbolos;
import javax.swing.JOptionPane;

/**
 * Frame que inserta un token en la _tablaDeSimbolos de simbolos.
 * 
 * @author  Grupo 3, Javier Salcedo Gomez
 */
public class InsertarToken extends javax.swing.JPanel {
    
    // ATRIBUTOS
    MarcoTabla _marcoTabla;
    TablaSimbolos _tablaDeSimbolos;

    /** 
     * Constructor de la clase InsertarToken. 
     */
    public InsertarToken() {

        initComponents();
    }

    /**
     * Constructor de la clase InsertarToken. 
     * 
     * @param marco Marco de Tabla asociado.
     */
    public InsertarToken(MarcoTabla marco) {

        initComponents();
        
        _marcoTabla = marco;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Procedure = new javax.swing.JButton();
        Module = new javax.swing.JButton();
        Identificador = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();

        Procedure.setText("Procedure");
        Procedure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcedureActionPerformed(evt);
            }
        });

        Module.setText("Module");
        Module.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModuleActionPerformed(evt);
            }
        });

        Identificador.setText("Identificador");
        Identificador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdentificadorActionPerformed(evt);
            }
        });

        Cerrar.setText("cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Cerrar)
                    .add(Identificador)
                    .add(Module)
                    .add(Procedure))
                .addContainerGap(271, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .add(Module)
                .add(18, 18, 18)
                .add(Procedure)
                .add(18, 18, 18)
                .add(Identificador)
                .add(18, 18, 18)
                .add(Cerrar)
                .add(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModuleActionPerformed

        String contenido = JOptionPane.showInputDialog(null,
                "Inserte el nombre del modulo", "Nombre del modulo", JOptionPane.QUESTION_MESSAGE);
        int importadas = JOptionPane.showConfirmDialog(_marcoTabla, "Desea incluir variables importadas");

        if (contenido != null) {

            if (_tablaDeSimbolos == null) 
                _tablaDeSimbolos = new TablaSimbolos(contenido, null, null);
//            else
//                _tablaDeSimbolos.insertarModulo(contenido);
        }
        if (importadas == 0) {
            
            boolean continuar = true;
            
            while (true) {

                contenido = JOptionPane.showInputDialog(null,
                        "Inserte el nombre de la variable a importar", "Nombre de la variable", JOptionPane.QUESTION_MESSAGE);
                if (contenido != null) {
                    
                    // Comprobamos que no sea el modulo padre
                    if (_tablaDeSimbolos.getContinente() != null || _tablaDeSimbolos.getModPadre() != null){ 
                        
                        if (_tablaDeSimbolos.getModPadre().estaContenida(contenido)) 
                            _tablaDeSimbolos.insertarIdentificador(contenido);
                         else 
                            JOptionPane.showMessageDialog(_marcoTabla, "Error", "Variable no declarada", JOptionPane.ERROR_MESSAGE);
                        
                    } 
                    else//es el modulo padre insertamos la variable sin mas
                        _tablaDeSimbolos.insertarIdentificador(contenido);
                } 
                else 
                    //salimos del bucle
                    break;
            }
        }
        
        int exportadas = JOptionPane.showConfirmDialog(_marcoTabla, "Desea incluir variables exportadas");
        
        if (exportadas == 0) {
            
            while (true) {
                contenido = JOptionPane.showInputDialog(null,
                        "Inserte el nombre de la variable a exportar", "Nombre de la variable", JOptionPane.QUESTION_MESSAGE);
                if (contenido != null) {
                    _tablaDeSimbolos.a√±adirVariableExportada(contenido);
                    _tablaDeSimbolos.insertarIdentificador(contenido);
                } 
                else 
                    break;
            }
        }

    }//GEN-LAST:event_ModuleActionPerformed
    
    /**
     * Devuelve la tabla de simbolos asociada.
     * 
     * @return La tabla de simbolos asociada.
     */
    public TablaSimbolos getTabla() {
        
        while (_tablaDeSimbolos.getContinente() != null || _tablaDeSimbolos.getModPadre() != null) {
            
            if (_tablaDeSimbolos.getContinente() != null) 
                _tablaDeSimbolos = _tablaDeSimbolos.getContinente();
             else 
                _tablaDeSimbolos = _tablaDeSimbolos.getModPadre();
        }
        
        return _tablaDeSimbolos;
    }
    
    private void ProcedureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcedureActionPerformed
        
        if (_tablaDeSimbolos != null) {
            
            String contenido = JOptionPane.showInputDialog(null,
                    "Inserte el nombre del procedure", "Nombre del procedure", JOptionPane.QUESTION_MESSAGE);
//            if (contenido != null)
//                _tablaDeSimbolos = _tablaDeSimbolos.insertarProcedimiento(contenido);
        } 
        else 
            JOptionPane.showMessageDialog(_marcoTabla, "Modulo padre no creado", "Error", JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_ProcedureActionPerformed

    private void IdentificadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdentificadorActionPerformed
        
        if (_tablaDeSimbolos != null) {
            
            String contenido = JOptionPane.showInputDialog(null,
                    "Inserte el nombre del identificador", "Nombre del identificador", JOptionPane.QUESTION_MESSAGE);
            if (contenido != null) 
                _tablaDeSimbolos.insertarIdentificador(contenido);    
        } 
        else 
            JOptionPane.showMessageDialog(_marcoTabla, "Modulo padre no creado", "Error", JOptionPane.ERROR_MESSAGE);   
    }//GEN-LAST:event_IdentificadorActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        
        if (_tablaDeSimbolos != null) {

            if (_tablaDeSimbolos.getContinente() == null && _tablaDeSimbolos.getModPadre() == null)
                // mostrar mensaje no se puede
                JOptionPane.showMessageDialog(_marcoTabla, "Estas en la raiz", "Error", JOptionPane.ERROR_MESSAGE);
            else 
                if (_tablaDeSimbolos.getContinente() != null) 
                    // caso en el que estuvieramos en un procedimiento
                    _tablaDeSimbolos = _tablaDeSimbolos.getContinente();       
                else 
                    // caso en el que estuvieramos en un modulo
                    _tablaDeSimbolos = _tablaDeSimbolos.getModPadre();         
        } 
        else 
            JOptionPane.showMessageDialog(_marcoTabla, "Modulo padre no creado", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_CerrarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton Identificador;
    private javax.swing.JButton Module;
    private javax.swing.JButton Procedure;
    // End of variables declaration//GEN-END:variables
}
